  name: Deploy with SSH
  uses: appleboy/ssh-action@master
  with:
    host: ${{ secrets.SSH_HOST }}
    username: ${{ secrets.SSH_USERNAME }}
    key: ${{ secrets.SSH_KEY }}
    script: |
      # 1. nvm(Node Version Manager) 환경 설정 불러오기
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      
      # 2. Yarn이 설치되어 있는지 확인하고, 없으면 설치
      if ! command -v yarn &> /dev/null
      then
          echo "--- Yarn not found, installing... ---"
          npm install -g yarn
      fi
      
      # 3. 프로젝트 폴더 경로 설정 및 코드 업데이트
      PROJECT_DIR="/var/www/SysInfo_V4"
      cd $PROJECT_DIR
      git fetch --all
      git reset --hard origin/main
      
      # 4. 프론트엔드 설치 및 빌드 (Yarn 사용!)
      echo "--- Building Frontend ---"
      cd frontend
      yarn
      yarn build
      
      # 5. 백엔드 설치 및 재시작 (Yarn 사용!)
      echo "--- Restarting Backend ---"
      cd ../backend
      yarn
      # pm2가 yarn으로 실행될 때를 대비해 스크립트 직접 실행
      ./node_modules/.bin/pm2 restart sysinfo-backend || ./node_modules/.bin/pm2 start server.js --name "sysinfo-backend"
      ./node_modules/.bin/pm2 save
      
      # 6. Nginx가 읽을 수 있도록 권한 부여
      echo "--- Setting Permissions ---"
      sudo chmod -R 755 $PROJECT_DIR
      
      # 7. Nginx 재시작
      echo "--- Restarting Nginx ---"
      sudo systemctl restart nginx
    port: 22
    protocol: tcp
    timeout: 30s
    command_timeout: 20m # <-- 이 부분을 10m에서 20m (또는 30m) 등으로 늘려줘
    proxy_port: 22
    proxy_protocol: tcp
    proxy_timeout: 30s
    curl_insecure: false
    capture_stdout: false